#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Parking.Database.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Parking")]
	public partial class DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlackoutDate(BlackoutDate instance);
    partial void UpdateBlackoutDate(BlackoutDate instance);
    partial void DeleteBlackoutDate(BlackoutDate instance);
    partial void InsertParkingSpace(ParkingSpace instance);
    partial void UpdateParkingSpace(ParkingSpace instance);
    partial void DeleteParkingSpace(ParkingSpace instance);
    partial void InsertParkingSpacesAdministrator(ParkingSpacesAdministrator instance);
    partial void UpdateParkingSpacesAdministrator(ParkingSpacesAdministrator instance);
    partial void DeleteParkingSpacesAdministrator(ParkingSpacesAdministrator instance);
    partial void InsertParkingSpacesOwner(ParkingSpacesOwner instance);
    partial void UpdateParkingSpacesOwner(ParkingSpacesOwner instance);
    partial void DeleteParkingSpacesOwner(ParkingSpacesOwner instance);
    #endregion
		
		public DataModelDataContext() : 
				base(global::Parking.Properties.Settings.Default.ParkingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BlackoutDate> BlackoutDates
		{
			get
			{
				return this.GetTable<BlackoutDate>();
			}
		}
		
		public System.Data.Linq.Table<ParkingSpace> ParkingSpaces
		{
			get
			{
				return this.GetTable<ParkingSpace>();
			}
		}
		
		public System.Data.Linq.Table<ParkingSpacesAdministrator> ParkingSpacesAdministrators
		{
			get
			{
				return this.GetTable<ParkingSpacesAdministrator>();
			}
		}
		
		public System.Data.Linq.Table<ParkingSpacesOwner> ParkingSpacesOwners
		{
			get
			{
				return this.GetTable<ParkingSpacesOwner>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="parking.usp_FreeParkingSpaces_AddNew")]
		public int usp_FreeParkingSpaces_AddNew([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ownerId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date_start, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date_end)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ownerId, date_start, date_end);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="parking.BlackoutDates")]
	public partial class BlackoutDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DateId;
		
		private System.DateTime _BlackoutDate1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateIdChanging(int value);
    partial void OnDateIdChanged();
    partial void OnBlackoutDate1Changing(System.DateTime value);
    partial void OnBlackoutDate1Changed();
    #endregion
		
		public BlackoutDate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DateId
		{
			get
			{
				return this._DateId;
			}
			set
			{
				if ((this._DateId != value))
				{
					this.OnDateIdChanging(value);
					this.SendPropertyChanging();
					this._DateId = value;
					this.SendPropertyChanged("DateId");
					this.OnDateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BlackoutDate", Storage="_BlackoutDate1", DbType="Date NOT NULL")]
		public System.DateTime BlackoutDate1
		{
			get
			{
				return this._BlackoutDate1;
			}
			set
			{
				if ((this._BlackoutDate1 != value))
				{
					this.OnBlackoutDate1Changing(value);
					this.SendPropertyChanging();
					this._BlackoutDate1 = value;
					this.SendPropertyChanged("BlackoutDate1");
					this.OnBlackoutDate1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="parking.ParkingSpaces")]
	public partial class ParkingSpace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParkingSpaceId;
		
		private System.DateTime _Date;
		
		private System.Nullable<int> _PlaceRentedFor;
		
		private System.Nullable<int> _ParkingSpacesOwnerID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParkingSpaceIdChanging(int value);
    partial void OnParkingSpaceIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPlaceRentedForChanging(System.Nullable<int> value);
    partial void OnPlaceRentedForChanged();
    partial void OnParkingSpacesOwnerIDChanging(System.Nullable<int> value);
    partial void OnParkingSpacesOwnerIDChanged();
    #endregion
		
		public ParkingSpace()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ParkingSpaceId
		{
			get
			{
				return this._ParkingSpaceId;
			}
			set
			{
				if ((this._ParkingSpaceId != value))
				{
					this.OnParkingSpaceIdChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceId = value;
					this.SendPropertyChanged("ParkingSpaceId");
					this.OnParkingSpaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceRentedFor", DbType="Int")]
		public System.Nullable<int> PlaceRentedFor
		{
			get
			{
				return this._PlaceRentedFor;
			}
			set
			{
				if ((this._PlaceRentedFor != value))
				{
					this.OnPlaceRentedForChanging(value);
					this.SendPropertyChanging();
					this._PlaceRentedFor = value;
					this.SendPropertyChanged("PlaceRentedFor");
					this.OnPlaceRentedForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpacesOwnerID", DbType="Int")]
		public System.Nullable<int> ParkingSpacesOwnerID
		{
			get
			{
				return this._ParkingSpacesOwnerID;
			}
			set
			{
				if ((this._ParkingSpacesOwnerID != value))
				{
					this.OnParkingSpacesOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpacesOwnerID = value;
					this.SendPropertyChanged("ParkingSpacesOwnerID");
					this.OnParkingSpacesOwnerIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="parking.ParkingSpacesAdministrator")]
	public partial class ParkingSpacesAdministrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdministratorId;
		
		private string _AdministratorName;
		
		private System.DateTime _StartsOn;
		
		private System.DateTime _EndsOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdministratorIdChanging(int value);
    partial void OnAdministratorIdChanged();
    partial void OnAdministratorNameChanging(string value);
    partial void OnAdministratorNameChanged();
    partial void OnStartsOnChanging(System.DateTime value);
    partial void OnStartsOnChanged();
    partial void OnEndsOnChanging(System.DateTime value);
    partial void OnEndsOnChanged();
    #endregion
		
		public ParkingSpacesAdministrator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministratorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdministratorId
		{
			get
			{
				return this._AdministratorId;
			}
			set
			{
				if ((this._AdministratorId != value))
				{
					this.OnAdministratorIdChanging(value);
					this.SendPropertyChanging();
					this._AdministratorId = value;
					this.SendPropertyChanged("AdministratorId");
					this.OnAdministratorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministratorName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AdministratorName
		{
			get
			{
				return this._AdministratorName;
			}
			set
			{
				if ((this._AdministratorName != value))
				{
					this.OnAdministratorNameChanging(value);
					this.SendPropertyChanging();
					this._AdministratorName = value;
					this.SendPropertyChanged("AdministratorName");
					this.OnAdministratorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartsOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartsOn
		{
			get
			{
				return this._StartsOn;
			}
			set
			{
				if ((this._StartsOn != value))
				{
					this.OnStartsOnChanging(value);
					this.SendPropertyChanging();
					this._StartsOn = value;
					this.SendPropertyChanged("StartsOn");
					this.OnStartsOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndsOn", DbType="DateTime NOT NULL")]
		public System.DateTime EndsOn
		{
			get
			{
				return this._EndsOn;
			}
			set
			{
				if ((this._EndsOn != value))
				{
					this.OnEndsOnChanging(value);
					this.SendPropertyChanging();
					this._EndsOn = value;
					this.SendPropertyChanged("EndsOn");
					this.OnEndsOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="parking.ParkingSpacesOwners")]
	public partial class ParkingSpacesOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OwnerID;
		
		private string _OwnerName;
		
		private System.Nullable<int> _SpaceNumber;
		
		private System.DateTime _StartsOn;
		
		private System.DateTime _EndsOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOwnerIDChanging(int value);
    partial void OnOwnerIDChanged();
    partial void OnOwnerNameChanging(string value);
    partial void OnOwnerNameChanged();
    partial void OnSpaceNumberChanging(System.Nullable<int> value);
    partial void OnSpaceNumberChanged();
    partial void OnStartsOnChanging(System.DateTime value);
    partial void OnStartsOnChanged();
    partial void OnEndsOnChanging(System.DateTime value);
    partial void OnEndsOnChanged();
    #endregion
		
		public ParkingSpacesOwner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this.OnOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerName = value;
					this.SendPropertyChanged("OwnerName");
					this.OnOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceNumber", DbType="Int")]
		public System.Nullable<int> SpaceNumber
		{
			get
			{
				return this._SpaceNumber;
			}
			set
			{
				if ((this._SpaceNumber != value))
				{
					this.OnSpaceNumberChanging(value);
					this.SendPropertyChanging();
					this._SpaceNumber = value;
					this.SendPropertyChanged("SpaceNumber");
					this.OnSpaceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartsOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartsOn
		{
			get
			{
				return this._StartsOn;
			}
			set
			{
				if ((this._StartsOn != value))
				{
					this.OnStartsOnChanging(value);
					this.SendPropertyChanging();
					this._StartsOn = value;
					this.SendPropertyChanged("StartsOn");
					this.OnStartsOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndsOn", DbType="DateTime NOT NULL")]
		public System.DateTime EndsOn
		{
			get
			{
				return this._EndsOn;
			}
			set
			{
				if ((this._EndsOn != value))
				{
					this.OnEndsOnChanging(value);
					this.SendPropertyChanging();
					this._EndsOn = value;
					this.SendPropertyChanged("EndsOn");
					this.OnEndsOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
